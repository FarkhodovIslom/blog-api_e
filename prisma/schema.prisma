// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  blogs     Blog[]   @relation("UserBlogs")
  joinedBlogs JoinedBlog[]
  comments  Comment[]
}

model Blog {
  id        Int      @id @default(autoincrement())
  name      String
  ownerId   Int
  owner     User     @relation("UserBlogs", fields: [ownerId], references: [id])
  posts     Post[]
  members   JoinedBlog[]
}

model JoinedBlog {
  id      Int    @id @default(autoincrement())
  userId  Int
  blogId  Int
  user    User   @relation(fields: [userId], references: [id])
  blog    Blog   @relation(fields: [blogId], references: [id])

  @@unique([userId, blogId])
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  views     Int      @default(0)
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  userId    Int
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

